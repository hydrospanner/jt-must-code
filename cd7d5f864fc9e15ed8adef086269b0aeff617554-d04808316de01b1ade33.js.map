{"version":3,"file":"cd7d5f864fc9e15ed8adef086269b0aeff617554-d04808316de01b1ade33.js","mappings":"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","sources":["webpack://jt-must-code/./node_modules/@fortawesome/react-fontawesome/index.es.js","webpack://jt-must-code/./node_modules/gatsby-plugin-dark-mode/ThemeToggler.js","webpack://jt-must-code/./node_modules/gatsby-plugin-dark-mode/index.js","webpack://jt-must-code/../src/image-utils.ts","webpack://jt-must-code/../src/components/hooks.ts","webpack://jt-must-code/../src/components/picture.tsx","webpack://jt-must-code/../src/components/layout-wrapper.tsx","webpack://jt-must-code/../src/components/placeholder.tsx","webpack://jt-must-code/../src/components/main-image.tsx","webpack://jt-must-code/../src/components/gatsby-image.browser.tsx","webpack://jt-must-code/../src/components/gatsby-image.server.tsx","webpack://jt-must-code/../src/components/static-image.server.tsx","webpack://jt-must-code/../src/components/static-image.tsx","webpack://jt-must-code/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://jt-must-code/./src/components/dark_mode.js","webpack://jt-must-code/./src/components/bio.js","webpack://jt-must-code/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://jt-must-code/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://jt-must-code/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://jt-must-code/./node_modules/@babel/runtime/helpers/typeof.js"],"sourcesContent":["import { parse, icon } from '@fortawesome/fontawesome-svg-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n// Get CSS class list from a props object\nfunction classList(props) {\n  var _classes;\n  var beat = props.beat,\n    fade = props.fade,\n    beatFade = props.beatFade,\n    bounce = props.bounce,\n    shake = props.shake,\n    flash = props.flash,\n    spin = props.spin,\n    spinPulse = props.spinPulse,\n    spinReverse = props.spinReverse,\n    pulse = props.pulse,\n    fixedWidth = props.fixedWidth,\n    inverse = props.inverse,\n    border = props.border,\n    listItem = props.listItem,\n    flip = props.flip,\n    size = props.size,\n    rotation = props.rotation,\n    pull = props.pull; // map of CSS class names to properties\n\n  var classes = (_classes = {\n    'fa-beat': beat,\n    'fa-fade': fade,\n    'fa-beat-fade': beatFade,\n    'fa-bounce': bounce,\n    'fa-shake': shake,\n    'fa-flash': flash,\n    'fa-spin': spin,\n    'fa-spin-reverse': spinReverse,\n    'fa-spin-pulse': spinPulse,\n    'fa-pulse': pulse,\n    'fa-fw': fixedWidth,\n    'fa-inverse': inverse,\n    'fa-border': border,\n    'fa-li': listItem,\n    'fa-flip': flip === true,\n    'fa-flip-horizontal': flip === 'horizontal' || flip === 'both',\n    'fa-flip-vertical': flip === 'vertical' || flip === 'both'\n  }, _defineProperty(_classes, \"fa-\".concat(size), typeof size !== 'undefined' && size !== null), _defineProperty(_classes, \"fa-rotate-\".concat(rotation), typeof rotation !== 'undefined' && rotation !== null && rotation !== 0), _defineProperty(_classes, \"fa-pull-\".concat(pull), typeof pull !== 'undefined' && pull !== null), _defineProperty(_classes, 'fa-swap-opacity', props.swapOpacity), _classes); // map over all the keys in the classes object\n  // return an array of the keys where the value for the key is not null\n\n  return Object.keys(classes).map(function (key) {\n    return classes[key] ? key : null;\n  }).filter(function (key) {\n    return key;\n  });\n}\n\n// Camelize taken from humps\n// humps is copyright © 2012+ Dom Christie\n// Released under the MIT license.\n// Performant way to determine if object coerces to a number\nfunction _isNumerical(obj) {\n  obj = obj - 0; // eslint-disable-next-line no-self-compare\n\n  return obj === obj;\n}\nfunction camelize(string) {\n  if (_isNumerical(string)) {\n    return string;\n  } // eslint-disable-next-line no-useless-escape\n\n  string = string.replace(/[\\-_\\s]+(.)?/g, function (match, chr) {\n    return chr ? chr.toUpperCase() : '';\n  }); // Ensure 1st char is always lowercase\n\n  return string.substr(0, 1).toLowerCase() + string.substr(1);\n}\nvar _excluded$1 = [\"style\"];\nfunction capitalize(val) {\n  return val.charAt(0).toUpperCase() + val.slice(1);\n}\nfunction styleToObject(style) {\n  return style.split(';').map(function (s) {\n    return s.trim();\n  }).filter(function (s) {\n    return s;\n  }).reduce(function (acc, pair) {\n    var i = pair.indexOf(':');\n    var prop = camelize(pair.slice(0, i));\n    var value = pair.slice(i + 1).trim();\n    prop.startsWith('webkit') ? acc[capitalize(prop)] = value : acc[prop] = value;\n    return acc;\n  }, {});\n}\nfunction convert(createElement, element) {\n  var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (typeof element === 'string') {\n    return element;\n  }\n  var children = (element.children || []).map(function (child) {\n    return convert(createElement, child);\n  });\n  /* eslint-disable dot-notation */\n\n  var mixins = Object.keys(element.attributes || {}).reduce(function (acc, key) {\n    var val = element.attributes[key];\n    switch (key) {\n      case 'class':\n        acc.attrs['className'] = val;\n        delete element.attributes['class'];\n        break;\n      case 'style':\n        acc.attrs['style'] = styleToObject(val);\n        break;\n      default:\n        if (key.indexOf('aria-') === 0 || key.indexOf('data-') === 0) {\n          acc.attrs[key.toLowerCase()] = val;\n        } else {\n          acc.attrs[camelize(key)] = val;\n        }\n    }\n    return acc;\n  }, {\n    attrs: {}\n  });\n  var _extraProps$style = extraProps.style,\n    existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style,\n    remaining = _objectWithoutProperties(extraProps, _excluded$1);\n  mixins.attrs['style'] = _objectSpread2(_objectSpread2({}, mixins.attrs['style']), existingStyle);\n  /* eslint-enable */\n\n  return createElement.apply(void 0, [element.tag, _objectSpread2(_objectSpread2({}, mixins.attrs), remaining)].concat(_toConsumableArray(children)));\n}\nvar PRODUCTION = false;\ntry {\n  PRODUCTION = process.env.NODE_ENV === 'production';\n} catch (e) {}\nfunction log() {\n  if (!PRODUCTION && console && typeof console.error === 'function') {\n    var _console;\n    (_console = console).error.apply(_console, arguments);\n  }\n}\nfunction normalizeIconArgs(icon) {\n  // this has everything that it needs to be rendered which means it was probably imported\n  // directly from an icon svg package\n  if (icon && _typeof(icon) === 'object' && icon.prefix && icon.iconName && icon.icon) {\n    return icon;\n  }\n  if (parse.icon) {\n    return parse.icon(icon);\n  } // if the icon is null, there's nothing to do\n\n  if (icon === null) {\n    return null;\n  } // if the icon is an object and has a prefix and an icon name, return it\n\n  if (icon && _typeof(icon) === 'object' && icon.prefix && icon.iconName) {\n    return icon;\n  } // if it's an array with length of two\n\n  if (Array.isArray(icon) && icon.length === 2) {\n    // use the first item as prefix, second as icon name\n    return {\n      prefix: icon[0],\n      iconName: icon[1]\n    };\n  } // if it's a string, use it as the icon name\n\n  if (typeof icon === 'string') {\n    return {\n      prefix: 'fas',\n      iconName: icon\n    };\n  }\n}\n\n// creates an object with a key of key\n// and a value of value\n// if certain conditions are met\nfunction objectWithKey(key, value) {\n  // if the value is a non-empty array\n  // or it's not an array but it is truthy\n  // then create the object with the key and the value\n  // if not, return an empty array\n  return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty({}, key, value) : {};\n}\nvar _excluded = [\"forwardedRef\"];\nfunction FontAwesomeIcon(_ref) {\n  var forwardedRef = _ref.forwardedRef,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var iconArgs = props.icon,\n    maskArgs = props.mask,\n    symbol = props.symbol,\n    className = props.className,\n    title = props.title,\n    titleId = props.titleId,\n    maskId = props.maskId;\n  var iconLookup = normalizeIconArgs(iconArgs);\n  var classes = objectWithKey('classes', [].concat(_toConsumableArray(classList(props)), _toConsumableArray(className.split(' '))));\n  var transform = objectWithKey('transform', typeof props.transform === 'string' ? parse.transform(props.transform) : props.transform);\n  var mask = objectWithKey('mask', normalizeIconArgs(maskArgs));\n  var renderedIcon = icon(iconLookup, _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, classes), transform), mask), {}, {\n    symbol: symbol,\n    title: title,\n    titleId: titleId,\n    maskId: maskId\n  }));\n  if (!renderedIcon) {\n    log('Could not find icon', iconLookup);\n    return null;\n  }\n  var abstract = renderedIcon.abstract;\n  var extraProps = {\n    ref: forwardedRef\n  };\n  Object.keys(props).forEach(function (key) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!FontAwesomeIcon.defaultProps.hasOwnProperty(key)) {\n      extraProps[key] = props[key];\n    }\n  });\n  return convertCurry(abstract[0], extraProps);\n}\nFontAwesomeIcon.displayName = 'FontAwesomeIcon';\nFontAwesomeIcon.propTypes = {\n  beat: PropTypes.bool,\n  border: PropTypes.bool,\n  beatFade: PropTypes.bool,\n  bounce: PropTypes.bool,\n  className: PropTypes.string,\n  fade: PropTypes.bool,\n  flash: PropTypes.bool,\n  mask: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n  maskId: PropTypes.string,\n  fixedWidth: PropTypes.bool,\n  inverse: PropTypes.bool,\n  flip: PropTypes.oneOf([true, false, 'horizontal', 'vertical', 'both']),\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n  listItem: PropTypes.bool,\n  pull: PropTypes.oneOf(['right', 'left']),\n  pulse: PropTypes.bool,\n  rotation: PropTypes.oneOf([0, 90, 180, 270]),\n  shake: PropTypes.bool,\n  size: PropTypes.oneOf(['2xs', 'xs', 'sm', 'lg', 'xl', '2xl', '1x', '2x', '3x', '4x', '5x', '6x', '7x', '8x', '9x', '10x']),\n  spin: PropTypes.bool,\n  spinPulse: PropTypes.bool,\n  spinReverse: PropTypes.bool,\n  symbol: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  title: PropTypes.string,\n  titleId: PropTypes.string,\n  transform: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  swapOpacity: PropTypes.bool\n};\nFontAwesomeIcon.defaultProps = {\n  border: false,\n  className: '',\n  mask: null,\n  maskId: null,\n  fixedWidth: false,\n  inverse: false,\n  flip: false,\n  icon: null,\n  listItem: false,\n  pull: null,\n  pulse: false,\n  rotation: null,\n  size: null,\n  spin: false,\n  spinPulse: false,\n  spinReverse: false,\n  beat: false,\n  fade: false,\n  beatFade: false,\n  bounce: false,\n  shake: false,\n  symbol: false,\n  title: '',\n  titleId: null,\n  transform: null,\n  swapOpacity: false\n};\nvar convertCurry = convert.bind(null, React.createElement);\nexport { FontAwesomeIcon };","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ThemeToggler = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ThemeToggler, _React$Component);\n\n  function ThemeToggler() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      theme: typeof window !== 'undefined' ? window.__theme : null\n    });\n    return _this;\n  }\n\n  var _proto = ThemeToggler.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    window.__onThemeChange = function () {\n      _this2.setState({\n        theme: window.__theme\n      });\n    };\n  };\n\n  _proto.toggleTheme = function toggleTheme(theme) {\n    window.__setPreferredTheme(theme);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/_react.default.createElement(this.props.children, {\n      theme: this.state.theme,\n      toggleTheme: this.toggleTheme\n    });\n  };\n\n  return ThemeToggler;\n}(_react.default.Component);\n\nThemeToggler.propTypes = {\n  children: _propTypes.default.func.isRequired\n};\nvar _default = ThemeToggler;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\n\nvar _ThemeToggler = _interopRequireDefault(require(\"./ThemeToggler\"));\n\nexports.ThemeToggler = _ThemeToggler.default;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from \"react\"\nimport { ThemeToggler } from \"gatsby-plugin-dark-mode\"\n\nclass DarkThemeToggler extends React.Component {\n  render() {\n    return (\n      <ThemeToggler>\n        {({ theme, toggleTheme }) => (\n          <div>\n            <input\n              id=\"dark_mode_toggle\"\n              type=\"checkbox\"\n              className=\"checkbox\"\n              onClick={e => toggleTheme(e.target.checked ? \"dark\" : \"light\")}\n              checked={theme === \"dark\"}\n              readOnly\n            />{\" \"}\n            <label htmlFor=\"dark_mode_toggle\" className=\"switch\"></label>\n          </div>\n        )}\n      </ThemeToggler>\n    )\n  }\n}\n\nexport default DarkThemeToggler\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport DarkThemeToggler from \"../components/dark_mode\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            linkedin\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n  const rootPath = `${__PATH_PREFIX__}/`\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/john.jpg\"\n        width={150}\n        height={150}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      <div>\n        <p>\n          Written by &nbsp;\n          <a href={rootPath + `about`}>\n            <strong>{author.name}</strong>\n          </a>\n        </p>\n        <div className=\"authorSummary\">{author?.summary || null}</div>\n        <div className=\"social\">\n          <ul>\n            <li>\n              <a\n                href={`https://github.com/${social?.github || ``}`}\n                aria-label=\"GitHub\"\n              >\n                <FontAwesomeIcon icon={[\"fab\", \"github\"]} size=\"2x\" />\n              </a>\n            </li>\n            <li>\n              <a\n                href={`https://linkedin.com/in/${social?.linkedin || ``}`}\n                aria-label=\"LinkedIn\"\n              >\n                <FontAwesomeIcon icon={[\"fab\", \"linkedin\"]} size=\"2x\" />\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"theme_column\">\n        <DarkThemeToggler />\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","value","configurable","writable","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","call","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","o","minLen","n","toString","slice","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","arr2","camelize","string","replace","match","chr","toUpperCase","substr","toLowerCase","_excluded$1","PRODUCTION","e","normalizeIconArgs","icon","prefix","iconName","objectWithKey","_excluded","FontAwesomeIcon","_ref","forwardedRef","props","iconArgs","maskArgs","mask","symbol","className","title","titleId","maskId","iconLookup","classes","concat","_classes","beat","fade","beatFade","bounce","shake","flash","spin","spinPulse","spinReverse","pulse","fixedWidth","inverse","border","listItem","flip","size","rotation","pull","swapOpacity","map","classList","split","transform","renderedIcon","_console","console","error","log","abstract","extraProps","ref","defaultProps","hasOwnProperty","convertCurry","displayName","propTypes","convert","createElement","element","undefined","children","child","mixins","attributes","reduce","acc","val","attrs","s","trim","pair","prop","startsWith","charAt","_extraProps$style","style","existingStyle","remaining","tag","bind","_interopRequireDefault","require","exports","__esModule","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_react","_propTypes","ThemeToggler","_React$Component","_this","_len","args","_key","this","default","theme","window","__theme","_proto","componentDidMount","_this2","__onThemeChange","setState","toggleTheme","__setPreferredTheme","render","state","Component","func","isRequired","_default","_ThemeToggler","N","HTMLImageElement","j","t","a","r","u","loading","shouldLoad","opacity","O","l","backgroundColor","width","height","position","top","left","bottom","right","objectFit","objectPosition","d","transition","V","z","D","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","A","c","q","P","H","srcSet","_t$alt","decoding","G","fallback","_t$sources","sources","_t$shouldLoad","sizes","_ref6","media","type","B","F","Error","U","Q","ee","Y","h","X","image","J","Z","K","Set","te","_e$as","as","g","class","p","onStartLoad","m","onLoad","f","onError","w","y","b","v","E","M","k","S","$","I","JSON","stringify","images","x","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","ie","re","_len2","_key2","ne","se","oe","__imageData","__error","warn","camelCase","input","options","assign","pascalCase","join","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","_","p1","module","DarkThemeToggler","_inheritsLoose","React","id","onClick","checked","readOnly","htmlFor","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","StaticImage","formats","quality","href","rootPath","summary","github","linkedin","toPropertyKey","hint","prim","toPrimitive","res","String","Number","arg"],"sourceRoot":""}